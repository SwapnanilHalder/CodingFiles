Banker's Algorithm for Deadlock Avoidance
Process  Given  additional Need
G        20      17
H        30      20
K        4       7
available 15
At most 8 can be given to G. At most 2 can be given to H.
If 9 are given to G. Now 6 are available. No process can be done.
Let 3 are given to H. 12 available. K can be done. Now 12+4=16 available.
Now nothing can be done. 

Job C:[run 10][needP][run7][needQ][run 3]
Job D:[run 5][needQ][run8][needP][run 4]
Job E:[run 12][needP][run 1]
Normal execution is following
C:[0-10][10-17P] waits for Q and holds P.
D:[0-5][5-13Q] waits for P and holds Q.
Deadlock Avoidance is following
Job C:[0-10][17-24P][24-27PQ]
Job D:[0-5][5-13Q][13-17PQ]
Job E:[0-12][12-13P]
Deadlock prevent: How to remove cyclic wait?
Do not demand a lower resource when hold higher.
P is lower Q is higher.
Job C:[run 10][needP][run7][needQ][run 3]
Job D:[run 5][needPQ][run8][run 4]
Job E:[run 12][needP][run 1]
C:[0-10][18-25P][25-28Q]
D:[0-5][5-17PQ]
E:[0-12][17-18P] 
At t=17 p can be given to C also.
